<%- include('../partials/adminHeader') %>
<style>
    #toast-container > .toast-success {
      background: linear-gradient(to right, #1fe90ce3, #22242F 50% ) !important;
      width: 350px;
      height: 70px;
      position: relative;
      color: white; 
      text-align: center;
      font-size: larger;
      font-family: Verdana, Geneva, Tahoma, sans-serif;
    }
    
    #toast-container > .toast-success::after {
      content: ""; 
      position: absolute;
      bottom: 0;
      left: 0;
      width: 100%;
      height: 4px; 
      background-color: rgb(0, 255, 55); 
      transform: scaleX(0); 
      transform-origin: right; 
      animation: expandLine 5s linear forwards; 
    }
  
    @keyframes expandLine {
      to {
        transform: scaleX(1); 
      }
    }
  </style>

   <main>
      <!-- Content -->
        <div class="p-6">
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-6">
                <div class="bg-white rounded-md border border-gray-100 p-6 shadow-md shadow-black/5">
                    <div class="flex justify-between mb-6">
                        <div>
                            <div class="flex items-center mb-1">
                                <div class="text-2xl font-semibold text-green-600"><%= list[0] %></div>
                            </div>
                            <div class="text-sm font-medium text-gray-400">Users</div>
                        </div>
                    </div>
                    <a href="/admin/userManagement" class="text-[#f84525] font-medium text-sm hover:text-red-800">View</a>
                </div>
                <div class="bg-white rounded-md border border-gray-100 p-6 shadow-md shadow-black/5">
                    <div class="flex justify-between mb-4">
                        <div>
                            <div class="flex items-center mb-1">
                                <div class="text-2xl font-semibold text-blue-600"><%= list[1] %></div>                 </div>
                            <div class="text-sm font-medium text-gray-400">Brands</div>
                        </div>
                    </div>
                    <a href="/admin/product-list" class="text-[#f84525] font-medium text-sm hover:text-red-800">View</a>
                </div>
                <div class="bg-white rounded-md border border-gray-100 p-6 shadow-md shadow-black/5">
                    <div class="flex justify-between mb-6">
                        <div>
                            <div class="text-2xl font-semibold mb-1 text-red-600"><%= list[2] %></div>
                            <div class="text-sm font-medium text-gray-400">Categories</div>
                        </div>
                    </div>
                    <a href="/admin/category-list" class="text-[#f84525] font-medium text-sm hover:text-red-800">View</a>
                </div>
            </div>
                <!-- Graph 1 -->
                <div class="grid grid-cols-1 lg:grid-cols-1 mb-6">
         
                  <div class="relative flex flex-col min-w-0 mb-4 lg:mb-0 break-words bg-gray-50 shadow-lg w-full">
                      <div class="mb-0 px-0 border-0">
                          <div class="flex flex-wrap items-center px-4 py-2">
                              <div class="bg-white border border-gray-100 shadow-md w-full">
                                  <div class="grid grid-cols-1 lg:grid-cols-1 gap-6 mb-6">
                                      <div class="bg-white border border-gray-100 shadow-md p-6 rounded-md lg:col-span-2">
                                      
                                          <select class=" block w-36 h-6  text-gray-500 shadow-sm  focus:ring-2 focus:ring-inset focus:ring-indigo-600 sm:max-w-xs sm:text-sm sm:leading-6 font-sans">
                                            <option selected disabled selected>  </option>
                                            <option value="Shipped">Daily</option>
                                            <option value="Cancelled">monthly</option>
                                            <option value="Cancelled">Yearly</option>
                                         </select>
                                         <button class="text-red-500" onclick="graphDropdown()">ok</button>
                                         <canvas id="myChart"></canvas>
                                          </div>
                                      </div>
                                  </div>
                              </div>
                          </div>
                      </div>
                  </div>
              </div>
        </div>

            <!---------------- Sorting orders ---------------->
<section class="flex justify-end items-end">
  <div class="relative">
    <button id="dropdownDefaultButton" data-dropdown-toggle="dropdown" class="mt-12 text-gray-950 h-9 w-44 border border-gray-950 bg-gray-500  focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium text-sm px-5 py-2.5 inline-flex dark:bg-gray-50 dark:hover:bg-gray-700 dark:hover:text-white dark:focus:ring-blue-800 justify-center" type="button" onclick="toggleDropdown()">
      <span class="flex items-center font-thin">Sort By</span>
      <svg class="w-2.5 h-2.5 mt-2 ml-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"/></svg>
    </button>
    <div id="dropdown" class="absolute right-0 z-10 hidden bg-white divide-y divide-gray-100 shadow w-44 dark:bg-gray-100 text-gray-950">
      <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="dropdownDefaultButton">
        <li>
          <a href="/admin/sortDashboard/topTenPrdt" class="block px-4 py-2 text-gray-950 font-thin hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Top 10 Proudcts</a>
        </li>
        <li>
          <a href="/admin/sortDashboard/topTenCtgry" class="block px-4 py-2 text-gray-950 font-thin hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white" >Top 10 Categories</a>
        </li>
        <li>
          <a href="/admin/sortDashboard/topTenBrnd" class="block px-4 py-2 text-gray-950 font-thin hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white" >Top 10 Brands</a>
        </li>
      </ul>
    </div>
  </div>
</section>


<!-- 
<section class="py-1 bg-blueGray-50 ">
  <h1 class="font-bold text-2xl">Top Sellers</h1>
  <div class="w-full mb-12 xl:mb-0 px-2 mt-5">
    <div class="relative flex flex-col min-w-0 break-words bg-white w-full mb-6 shadow-lg rounded ">
      <div class="rounded-t mb-0 px-4 border-0">
        <div class="flex flex-wrap items-center">
          <div class="relative w-full px-4 max-w-full flex-grow flex-1">
            <h3 class="font-semibold text-base text-blueGray-700">    </h3>
          </div>
  
        </div>
      </div>
  
      <div class="w-full">
        <table class="items-center bg-transparent border-collapse w-full">
          <thead>
              
            <tr>
              <th class=" bg-pink-500 pl-5 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left">
                           Name</th>
              <th class=" bg-pink-500 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3  text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left">
                           Description</th>
            <th class=" bg-pink-500 text-blueGray-500  border border-solid border-blueGray-100 py-3 pr-20  text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold">
                            Edit</th>
            <th class=" bg-pink-500 text-blueGray-500 align-middle border border-solid border-blueGray-100 py-3 pr-20 text-xs uppercase border-l-0 border-r-0 whitespace-nowrap font-semibold text-left">
                            Delete</th>
          
           
            </tr>
          </thead>
  
          <tbody>
              
            <tr>
              <td class="border-t-0 pl-5 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap">
                  category.categoryName 
              </td>
           
              <td class="border-t-0 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap w-auto">
                 category.description %>
              </td>
       
              <td class="border-t-0 align-middle border-l-0 border-r-0 text-xs whitespace-nowrap">
                  <a href="./category-edit/" class="font-medium font-sans text-xs text-red-950  hover:underline">
                      <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-3 h-3">
                          <path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125" />
                        </svg>
                    </a>
              </td>
              <td class="border-t-0 align-center border-l-0 border-r-0 text-xs whitespace-nowrap p-4">
                  <a href="./category-block/" class="font-medium text-red-950  hover:underline">
                     
                      
              </td>
         
            </tr>
        
          </tbody>
  
        </table>
        <section class="mb-14 mt-10">
          <a href="./category-add" type="submit" class="flex w-32 rounded-md bg-pink-500 px-3 py-1.5 text-sm font-semibold leading-6 text-gray-700 shadow-sm hover:bg-yellow-500 hover:text-white focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Add Category</a>
  
      </section> -->
      </div>
    </div>
  </div>
  
  </section>
      <!-- End Content -->
    </main>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script src="https://unpkg.com/@popperjs/core@2"></script>


    <!---------------- sort dropdown ------------------->
    <script>
      function toggleDropdown() {
          var dropdown = document.getElementById('dropdown');
          dropdown.classList.toggle('hidden');
        }
  </script>

    <!---------------- toastr script ------------------>
    <script>
        var toastMessage = "<%= typeof toastMessage !== 'undefined' ? toastMessage.text : '' %>";
        document.addEventListener('DOMContentLoaded', function() {
            if (toastMessage !== '') {
                toastr.success(toastMessage)}
        });
    </script>

      <!---------------- chart script ---------------->
      <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
      <!-- <script>
        fetch('/admin/orders/monthly')
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.json();
          })
          .then(data => {
            const ordersData = data.map(order => ({
              month: new Date(order.createdate).getMonth(),
              quantity: order.total 
            }));
      
            const monthlyData = Array.from({ length: 12 }, () => 0); 
            ordersData.forEach(order => {
              const month = order.month;
              monthlyData[month] += order.quantity;
            });
      
            const ctx = document.getElementById('myChart');
          
                  new Chart(ctx, {
              type: 'bar',
              data: {
                labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
                datasets: [{
                  label: '# Monthly',
                  data: monthlyData,
                  borderWidth: 1
                }]
              },
              options: {
                scales: {
                  y: {
                    beginAtZero: true
                  }
                }
              }
            });
            
          })
          .catch(error => console.error('Error fetching orders:', error));

</script> -->
      

<script>
        fetch('/admin/orders/yearly')
          .then(response => {
            if (!response.ok) {
              throw new Error('Network response was not ok');
            }
            return response.json();
          })
          .then(data => {
            const ordersData = data.map(order => ({
              year: new Date(order.createdate).getFullYear(),
              quantity: order.total 
            }));
      
            const yearlyData = Array.from({ length: 13 }, () => 0); 
            ordersData.forEach(order => {
              const year = order.year - 2018;
              yearlyData[year] += order.quantity;
            });
      
            const ctx = document.getElementById('myChart').getContext('2d');
          
                  new Chart(ctx, {
              type: 'bar',
              data: {
                labels: ['2018', '2019', '2020', '2021', '2022', '2023', '2024', '2025', '2026', '2027', '2028', '2029', '2030'],
                datasets: [{
                  label: '# Yearly',
                  data: yearlyData,
                  borderWidth: 1
                }]
              },
              options: {
                scales: {
                  y: {
                    beginAtZero: true
                  }
                }
              }
            });
            
          })
          .catch(error => console.error('Error fetching orders:', error));

</script> 

<!-- <script>
  fetch('/admin/orders/daily')
      .then(response => {
          if (!response.ok) {
              throw new Error('Network response was not ok');
          }
          return response.json();
      })
      .then(data => {
          const ordersData = data.map(order => ({
              day: new Date(order.createdate).getDate(), 
              quantity: order.total
          }));

          const dailyData = Array.from({ length: 30 }, () => 0);

          ordersData.forEach(order => {
              const day = order.day;
              dailyData[day - 1] += order.quantity; 
          });

          const ctx = document.getElementById('myChart').getContext('2d');
          new Chart(ctx, {
              type: 'bar',
              data: {
                  labels: Array.from({ length: 30 }, (_, i) => (i + 1).toString()), 
                  datasets: [{
                      label: '# Daily Orders',
                      data: dailyData,
                      backgroundColor: 'rgba(54, 162, 235, 0.2)', 
                      borderColor: 'rgba(54, 162, 235, 1)', 
                      borderWidth: 1
                  }]
              },
              options: {
                  scales: {
                      y: {
                          beginAtZero: true
                      }
                  }
              }
          });
      })
      .catch(error => console.error('Error fetching or processing data:', error));
</script> -->

  <script>
    //<-------------------- graph dropdown ------------------>
          const graphDropdown = () => {
            alert('This is it')
          }
      </script>
      
    
<%- include('../partials/adminFooter') %>
