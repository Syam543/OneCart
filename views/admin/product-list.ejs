<%- include('../partials/adminHeader') %>

<main class="p-4">
    <section class="flex justify-end items-end">
        <div class="relative">
          <button id="dropdownDefaultButton" data-dropdown-toggle="dropdown" class="text-gray-950 h-9 w-44 rounded-full border border-gray-950 bg-gray-50  focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium text-sm px-5 py-2.5 inline-flex dark:bg-gray-50 dark:hover:bg-gray-700 dark:hover:text-white dark:focus:ring-blue-800 justify-center" type="button" onclick="toggleDropdown()">
            <span class="flex items-center font-thin">Sort items</span>
            <svg class="w-2.5 h-2.5 mt-2 ml-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 4 4 4-4"/></svg>
          </button>
      
          <div id="dropdown" class="absolute right-0 z-10 hidden bg-white divide-y divide-gray-100 rounded-lg shadow w-44 dark:bg-gray-100 text-gray-950">
            <ul class="py-2 text-sm text-gray-700 dark:text-gray-200" aria-labelledby="dropdownDefaultButton">
              <li>
                <a href="/admin/sortProductAdmin/recentProducts" class="block px-4 py-2 text-gray-950 font-thin hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white">Recently added</a>
              </li>
              <li>
                <a href="/admin/sortProductAdmin/olderProducts" class="block px-4 py-2 text-gray-950 font-thin hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white" >Older products</a>
              </li>
              <li>
                <a href="/admin/sortProductAdmin/blockedProducts" class="block px-4 py-2 text-gray-950 font-thin hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white" >Blocked products</a>
              </li>
              <li>
                <a href="/admin/sortProductAdmin/unBlockedProducts" class="block px-4 py-2 text-gray-950 font-thin hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white" >Unblocked products</a>
              </li>
            </ul>
          </div>
        </div>
      </section>

    <div class="overflow-x-auto shadow-md">
        <table class="w-full text-xs font-sans text-left rtl:text-right text-gray-500 dark:text-gray-400">
            <thead class="text-xs text-gray-700 uppercase bg-blue-800 dark:text-gray-400">
                <tr>
                    <th scope="col" class="px-4 md:px-6 py-3 md:py-4">Name</th>
                    <th scope="col" class="px-4 md:px-6 py-3 md:py-4">Stock</th>
                    <th scope="col" class="px-4 md:px-6 py-3 md:py-4">Brand</th>
                    <th scope="col" class="px-4 md:px-6 py-3 md:py-4">Color</th>
                    <th scope="col" class="px-4 md:px-6 py-3 md:py-4">Price</th>
                    <th scope="col" class="px-4 md:px-6 py-3 md:py-4">Action</th>
                    <th scope="col" class="px-4 md:px-6 py-3 md:py-4">Edit</th>
                </tr>
            </thead>
            <tbody>
                <% products.forEach(product => { %>
                <tr class="bg-white border-b dark:border-gray-400 hover:bg-gray-50">
                    <th scope="row" class="flex items-center px-4 md:px-6 py-3 md:py-4 text-gray-900 whitespace-nowrap dark:text-white">
                        <img class="w-8 h-8 md:w-8 md:h-8" src="/product_images/<%= product.productImage[0] %>" alt="Product Image">
                        <div class="ps-3">
                            <a href="#" class="font-medium font-sans text-gray-950 hover:underline"><%= product.productName %></a>
                        </div>
                    </th>
                    <td class="px-4 md:px-6 py-4">
                        <a href="#" class="font-medium font-sans text-gray-950 hover:underline"><%= product.stock %></a>
                    </td>
                    <td class="px-4 md:px-6 py-4">
                        <a class="font-medium font-sans text-gray-950 hover:underline"><%= product.brand %></a>
                    </td>
                    <td class="px-4 md:px-6 py-4">
                        <a href="#" class="font-medium font-sans text-gray-950 hover:underline"><%= product.color %></a>
                    </td>
                    <td class="px-4 md:px-6 py-4">
                        <a href="#" class="font-medium font-sans text-gray-950 hover:underline"><%= product.price %></a>
                    </td>


                    <td class="px-6 py-4">
                        <a href="/admin/product-block/<%= product._id %>" class="font-medium text-red-950  hover:underline">
                            <% if (product.deleted == false) { %>
                                <span class="relative flex h-3 w-3">
                                    <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-blue-400 opacity-75"> </span>
                                    <span class="relative inline-flex rounded-full h-3 w-3 bg-green-500 pl-3">Block</span>
                                  </span>
                            <% } else { %>
                                <span class="relative flex h-3 w-3">
                                    <span class="animate-ping absolute inline-flex h-full w-full rounded-full bg-blue-400 opacity-75"> </span>
                                    <span class="relative inline-flex rounded-full h-3 w-3 bg-red-500 pl-3">Unblock</span>
                                  </span>
                            <% } %>    
                        </td>
         


                    <td class="px-4 md:px-6 py-4">
                        <a href="/admin/product-edit/<%= product._id %>" class="font-medium font-sans text-gray-950 hover:underline">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-3 h-3">
                                <path stroke-linecap="round" stroke-linejoin="round" d="m16.862 4.487 1.687-1.688a1.875 1.875 0 1 1 2.652 2.652L6.832 19.82a4.5 4.5 0 0 1-1.897 1.13l-2.685.8.8-2.685a4.5 4.5 0 0 1 1.13-1.897L16.863 4.487Zm0 0L19.5 7.125" />
                            </svg>
                        </a>
                    </td>
                </tr>
                <% }); %>
            </tbody>
        </table>
  

        <section class="text-center w-full sm:w-3/4 mx-auto border-t flex justify-center py-6   ">
            <% if (currentPage > 1) { %>
                <a href="?page=<%= currentPage - 1 %>" class="px-2 font-sans hover:text-sky-600"> &lt; </a>
            <% } %>
            
            <% for (let i = 1; i <= totalPage; i++) { %>
                <a href="?page=<%= i %>" class="px-2 font-sans hover:text-sky-600 <%= i === currentPage ? 'text-sky-600' : '' %>"> <%= i %> </a>
            <% } %>
            
            <% if (currentPage < totalPage) { %>
                <a href="?page=<%= parseInt(currentPage) + 1 %>" class="px-2 font-sans hover:text-sky-600"> &gt; </a>
            <% } %>
        </section>

          
   
    </div>
    <section class="text-center mt-5 mb-10">
        <a href="/admin/product-add" class="inline-block h-10 w-40 px-4 py-2 text-sm font-semibold leading-6 text-white bg-blue-700 rounded-full shadow-sm hover:bg-red-800 focus:outline-none focus:ring-2 focus:ring-red-700 focus:ring-opacity-50">
            Add Product
        </a>
    </section>
    
</main>

<script>
    function toggleDropdown() {
        var dropdown = document.getElementById('dropdown');
        dropdown.classList.toggle('hidden');
      }
</script>


<script src="https://unpkg.com/@popperjs/core@2"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="/OneCart/controllers/UserMangementConroller.js"></script>


<%- include('../partials/adminFooter') %>




<script src="https://unpkg.com/@popperjs/core@2"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="/OneCart/controllers/UserMangementConroller.js"></script>

<script>
    // start: Sidebar
    const sidebarToggle = document.querySelector('.sidebar-toggle')
    const sidebarOverlay = document.querySelector('.sidebar-overlay')
    const sidebarMenu = document.querySelector('.sidebar-menu')
    const main = document.querySelector('.main')
    sidebarToggle.addEventListener('click', function (e) {
        e.preventDefault()
        main.classList.toggle('active')
        sidebarOverlay.classList.toggle('hidden')
        sidebarMenu.classList.toggle('-translate-x-full')
    })
    sidebarOverlay.addEventListener('click', function (e) {
        e.preventDefault()
        main.classList.add('active')
        sidebarOverlay.classList.add('hidden')
        sidebarMenu.classList.add('-translate-x-full')
    })
    document.querySelectorAll('.sidebar-dropdown-toggle').forEach(function (item) {
        item.addEventListener('click', function (e) {
            e.preventDefault()
            const parent = item.closest('.group')
            if (parent.classList.contains('selected')) {
                parent.classList.remove('selected')
            } else {
                document.querySelectorAll('.sidebar-dropdown-toggle').forEach(function (i) {
                    i.closest('.group').classList.remove('selected')
                })
                parent.classList.add('selected')
            }
        })
    })
    // end: Sidebar



    // start: Popper
    const popperInstance = {}
    document.querySelectorAll('.dropdown').forEach(function (item, index) {
        const popperId = 'popper-' + index
        const toggle = item.querySelector('.dropdown-toggle')
        const menu = item.querySelector('.dropdown-menu')
        menu.dataset.popperId = popperId
        popperInstance[popperId] = Popper.createPopper(toggle, menu, {
            modifiers: [
                {
                    name: 'offset',
                    options: {
                        offset: [0, 8],
                    },
                },
                {
                    name: 'preventOverflow',
                    options: {
                        padding: 24,
                    },
                },
            ],
            placement: 'bottom-end'
        });
    })
    document.addEventListener('click', function (e) {
        const toggle = e.target.closest('.dropdown-toggle')
        const menu = e.target.closest('.dropdown-menu')
        if (toggle) {
            const menuEl = toggle.closest('.dropdown').querySelector('.dropdown-menu')
            const popperId = menuEl.dataset.popperId
            if (menuEl.classList.contains('hidden')) {
                hideDropdown()
                menuEl.classList.remove('hidden')
                showPopper(popperId)
            } else {
                menuEl.classList.add('hidden')
                hidePopper(popperId)
            }
        } else if (!menu) {
            hideDropdown()
        }
    })

    function hideDropdown() {
        document.querySelectorAll('.dropdown-menu').forEach(function (item) {
            item.classList.add('hidden')
        })
    }
    function showPopper(popperId) {
        popperInstance[popperId].setOptions(function (options) {
            return {
                ...options,
                modifiers: [
                    ...options.modifiers,
                    { name: 'eventListeners', enabled: true },
                ],
            }
        });
        popperInstance[popperId].update();
    }
    function hidePopper(popperId) {
        popperInstance[popperId].setOptions(function (options) {
            return {
                ...options,
                modifiers: [
                    ...options.modifiers,
                    { name: 'eventListeners', enabled: false },
                ],
            }
        });
    }
    // end: Popper



    // start: Tab
    document.querySelectorAll('[data-tab]').forEach(function (item) {
        item.addEventListener('click', function (e) {
            e.preventDefault()
            const tab = item.dataset.tab
            const page = item.dataset.tabPage
            const target = document.querySelector('[data-tab-for="' + tab + '"][data-page="' + page + '"]')
            document.querySelectorAll('[data-tab="' + tab + '"]').forEach(function (i) {
                i.classList.remove('active')
            })
            document.querySelectorAll('[data-tab-for="' + tab + '"]').forEach(function (i) {
                i.classList.add('hidden')
            })
            item.classList.add('active')
            target.classList.remove('hidden')
        })
    })
    // end: Tab



    // start: Chart
    new Chart(document.getElementById('order-chart'), {
        type: 'line',
        data: {
            labels: generateNDays(7),
            datasets: [
                {
                    label: 'Active',
                    data: generateRandomData(7),
                    borderWidth: 1,
                    fill: true,
                    pointBackgroundColor: 'rgb(59, 130, 246)',
                    borderColor: 'rgb(59, 130, 246)',
                    backgroundColor: 'rgb(59 130 246 / .05)',
                    tension: .2
                },
                {
                    label: 'Completed',
                    data: generateRandomData(7),
                    borderWidth: 1,
                    fill: true,
                    pointBackgroundColor: 'rgb(16, 185, 129)',
                    borderColor: 'rgb(16, 185, 129)',
                    backgroundColor: 'rgb(16 185 129 / .05)',
                    tension: .2
                },
                {
                    label: 'Canceled',
                    data: generateRandomData(7),
                    borderWidth: 1,
                    fill: true,
                    pointBackgroundColor: 'rgb(244, 63, 94)',
                    borderColor: 'rgb(244, 63, 94)',
                    backgroundColor: 'rgb(244 63 94 / .05)',
                    tension: .2
                },
            ]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });

    function generateNDays(n) {
        const data = []
        for(let i=0; i<n; i++) {
            const date = new Date()
            date.setDate(date.getDate()-i)
            data.push(date.toLocaleString('en-US', {
                month: 'short',
                day: 'numeric'
            }))
        }
        return data
    }
    function generateRandomData(n) {
        const data = []
        for(let i=0; i<n; i++) {
            data.push(Math.round(Math.random() * 10))
        }
        return data
    }
    // end: Chart

</script>

<%- include('../partials/adminFooter') %>